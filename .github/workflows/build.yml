name: "publish"
on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-registry-
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: FedericoCarboni/setup-ffmpeg@v1
        id: setup-ffmpeg
      - name: copy ffmpeg
        if: matrix.platform == 'windows-latest'
        run: copy ${{ steps.setup-ffmpeg.outputs.ffmpeg-path }} .\src-tauri\ffmpeg-x86_64-pc-windows-msvc.exe
      - name: copy ffmpeg
        if: matrix.platform != 'windows-latest'
        run: |
          RUST_HOST=$(rustc -Vv | grep host | cut -f2 -d' ')
          cp ${{ steps.setup-ffmpeg.outputs.ffmpeg-path }} ./src-tauri/ffmpeg-$RUST_HOST
      - name: install app dependencies and build it
        run: npm i -g pnpm && pnpm install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
